# This New Version workflow is manually triggered and will update the version based on your inputs
name: New Version
on:
  workflow_dispatch:  # Go to [Actions] - select New Version -> [Run workflow]
    inputs:
      release_type:
        description: '[major/minor/patch]'
        default: 'patch'
        required: true
jobs:
  update-semver:
    runs-on: ubuntu-latest
    steps:
    - name: clone PR branch
      uses: actions/checkout@master
      with:
        fetch-depth: 1
        path: new_version

    - name: clone base branch
      uses: actions/checkout@master
      with:
        fetch-depth: 1
        path: base
        ref: ${{ '{{' }} github.event.pull_request.base.sha {{ '}}' }}

    - name: setup-python
      id: setup-python
      uses: actions/setup-python@master

    - name: install-bumpversion
      id: install-bumpversion
      run: |
        pip install bump2version

    - name: bump-version
      id: bump-version
      working-directory: new_version
      run: |
        release_type=${{ github.event.inputs.release_type }}

        CUR_VER=$(grep "current_version = " ../base/setup.cfg|cut -d " " -f3)
        cur_ver_major=$(printf %s "$CUR_VER" | cut -d "." -f 1)
        cur_ver_minor=$(printf %s "$CUR_VER" | cut -d "." -f 2)
        cur_ver_patch=$(printf %s "$CUR_VER" | cut -d "." -f 3)

        git config user.name = github-actions
        git config user.email = github-actions@github.com
        bumpversion --current-version ${CUR_VER} $release_type --no-tag

        NEW_VER=$(grep "current_version = " setup.cfg|cut -d " " -f3)
        new_ver_major=$(printf %s "$NEW_VER" | cut -d "." -f 1)
        new_ver_minor=$(printf %s "$NEW_VER" | cut -d "." -f 2)
        new_ver_patch=$(printf %s "$NEW_VER" | cut -d "." -f 3)

        if [[ (release_type = "major" && $new_ver_major > $cur_ver_major) || (release_type = "minor" && $new_ver_minor > $cur_ver_minor) ]]; then
            echo "All good!"; else
            echo "New version is not greater than current version!"
            exit 1
        fi
        git push -f --no-verify
